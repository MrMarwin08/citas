Cambios cr√≠ticos de interfaz ‚Äî Prioridad Alta
1. ‚úÖ Color de fondo uniforme en toda la app

Objetivo: unificar la est√©tica de fondo para lograr una apariencia moderna, coherente y sin cortes visuales.

üõ†Ô∏è Requisito t√©cnico:

    Se debe establecer el color de fondo principal global de la aplicaci√≥n en HEX: #111827 (un azul oscuro casi negro).

    Este color debe aplicarse como background color global para:

        La vista ra√≠z o contenedor principal (<SafeAreaView> o <View> ra√≠z).

        Todas las pantallas de navegaci√≥n: Biblioteca, Todas, Favoritas, Memorizadas, Colecciones y vistas internas de colecci√≥n.

        Cualquier otro fondo que se defina mediante backgroundColor, incluyendo pantallas emergentes, headers fijos, modales o listas.

üîÑ Implementaci√≥n recomendada:

    En apps React Native o similares, establecer este color como una constante o valor en el tema global de estilos (ThemeProvider, tailwind.config.js, styled-components, etc.).

    Asegurarse de que ning√∫n componente individual overridee este fondo con otros colores como blanco o negro puro (#000000), salvo que est√© justificado (p. ej. un bot√≥n puntual).

// Ejemplo en React Native
const appBackgroundColor = "#111827";

<View style={{ flex: 1, backgroundColor: appBackgroundColor }}>
  {/* ... */}
</View>

2. ‚ùå Eliminar la franja/marco/tira negra superior e inferior

Objetivo: eliminar cualquier espacio o margen negro que rompe la continuidad visual del fondo en toda la app.

üõ†Ô∏è Descripci√≥n del problema:

    En la interfaz actual aparece una franja o marco negro (posiblemente en la parte superior y/o inferior) que no coincide con el fondo azul oscuro definido, creando una ruptura visual no deseada.

    Esta franja suele deberse a:

        Valores incorrectos de paddingTop, paddingBottom o SafeAreaInsets.

        Un color por defecto aplicado a StatusBar, SafeAreaView, o al root View de navegaci√≥n que no ha sido sobreescrito.

        Layouts donde el fondo no se expande a toda la pantalla (por flex: 1 ausente).

üîÑ Revisi√≥n y soluci√≥n t√©cnica:

    Revisi√≥n del componente ra√≠z de navegaci√≥n y pantallas:

        Asegurar que todos los <SafeAreaView> o <View> usan el fondo #111827.

        Usar flex: 1 y paddingTop: 0, paddingBottom: 0 donde sea necesario para que el fondo cubra toda la pantalla.

    Asegurar que StatusBar tambi√©n tenga el mismo color:

import { StatusBar } from 'react-native';

<StatusBar backgroundColor="#111827" barStyle="light-content" />

    Revisar si el marco negro est√° generado por configuraci√≥n del NavigationContainer, Screen o SafeAreaProvider, y aplicar el color correcto en esas capas.

‚úÖ Resultado esperado:

    La interfaz completa debe tener un fondo uniforme HEX: #111827 sin interrupciones ni bandas visibles.

    Se elimina cualquier franja negra (inferior o superior) o borde no deseado, logrando un dise√±o m√°s pulido, limpio y profesional.

    Este fondo oscuro mejorar√° tambi√©n la legibilidad del texto claro y la visualizaci√≥n de iconos o botones que se basen en contraste.